name: render-books
description: Renderiza livros Quarto e cria PR para revis√£o

on:
  push:
    branches: [main]
    paths: ["build/**/*.qmd", "build/**/*.yml", "build/*.bib"]
  workflow_dispatch:

permissions:
  contents: write
  actions: write

env:
  USERNAME: ${{ github.repository_owner }}
  USEREMAIL: ${{ secrets.USEREMAIL }}
  TOKEN: ${{ secrets.TOKEN_REPO_SYNC }}

jobs:
  render-and:
    runs-on: ubuntu-latest
    outputs:
      pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
    steps:
      - name: Checkout reposit√≥rio
        uses: actions/checkout@v4
        with:
          token: ${{ env.TOKEN }}
          fetch-depth: 0

      - name: Configura Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Cria diret√≥rio de renderiza√ß√£o
        run: |
          echo "üìÅ Criando diret√≥rio para livros renderizados..."
          mkdir -p _rendered

      - name: Lista livros v√°lidos
        id: list-books
        run: |
          echo "üîç Buscando livros com padr√£o [A-Z]{3}[0-9]{4}..."
          find build -maxdepth 1 -type d -regex '.*/[A-Z]{3}[0-9]{4}' -printf '%f\n' | sort > book_list.txt

      - name: Renderiza livros Quarto
        run: |
          for folder in $(cat book_list.txt); do
            if [ -d "build/$folder" ]; then
              quarto render "build/$folder" --to html --execute --output-dir "_rendered/$folder"
            fi
          done
      
      - name: Livros dentro das pastas '_rendered/' e 'book/'
        run: |
          echo ""

      - name: Prepara estrutura para Pull Request
        run: |
          # Atualiza diret√≥rio book/ na pr√≥pria main
          echo "üîÑ Sincronizando livros renderizados na pasta book/..."

          # Remove vers√µes antigas apenas dos livros que foram re-renderizados
          # (livros que seguem o padr√£o [A-Z]{3}[0-9]{4})
          for folder in $(ls _rendered 2>/dev/null || echo ""); do
            # Verifica se o nome segue o padr√£o antes de remover
            if echo "$folder" | grep -qE '^[A-Z]{3}[0-9]{4}

      - name: Gera √≠ndice dos livros (JSON)
        run: |
          echo "üìã Gerando √≠ndice de livros..."
          echo '{
            "books": [' > book/books-index.json

          first=true
          # Processa apenas livros que seguem o padr√£o [A-Z]{3}[0-9]{4}
          for folder in $(ls book 2>/dev/null | grep -E '^[A-Z]{3}[0-9]{4}

      - name: Cria Pull Request para branch padr√£o
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ env.TOKEN }}
          branch: books-render-$(date +%Y%m%d-%H%M%S)
          base: main # ou master, dependendo da sua branch padr√£o
          title: "üìö Atualiza√ß√£o dos livros renderizados - $(date +'%Y-%m-%d %H:%M')"
          body: |
            ## üìñ Nova Renderiza√ß√£o dos Livros Quarto

            Esta PR cont√©m os livros atualizados renderizados a partir das mudan√ßas na branch `main`.

            ### üìã Detalhes da Renderiza√ß√£o
            - **Commit fonte**: ${{ github.sha }}
            - **Workflow**: ${{ github.run_id }}
            - **Data**: $(date +'%Y-%m-%d %H:%M:%S UTC')
            - **Triggering commit**: ${{ github.event.head_commit.message }}

            ### üìö Livros Renderizados
            $(ls _rendered 2>/dev/null | sed 's/^/- üìñ /' || echo "- Nenhum livro renderizado")

            ### üîÑ Mudan√ßas Inclu√≠das
            - ‚úÖ Livros Quarto renderizados para HTML na pasta `book/`
            - ‚úÖ √çndice de livros atualizado (`book/books-index.json`)
            - ‚úÖ Estrutura de arquivos organizada

            ### üìÅ Estrutura Adicionada/Atualizada
            ```
            book/
            ‚îú‚îÄ‚îÄ books-index.json     ‚Üê √çndice com metadata
            ‚îú‚îÄ‚îÄ livro1/
            ‚îÇ   ‚îú‚îÄ‚îÄ index.html
            ‚îÇ   ‚îî‚îÄ‚îÄ assets/
            ‚îú‚îÄ‚îÄ livro2/
            ‚îÇ   ‚îú‚îÄ‚îÄ index.html
            ‚îÇ   ‚îî‚îÄ‚îÄ assets/
            ‚îî‚îÄ‚îÄ ...
            ```

            ### üìù Arquivos Principais
            - `book/books-index.json` - √çndice com metadata dos livros
            - `book/*/index.html` - P√°ginas principais dos livros
            - Assets e recursos complementares

            ---

            ## üëÄ Review Checklist

            Por favor, verifique:
            - [ ] üìñ Livros foram renderizados corretamente
            - [ ] üé® Formata√ß√£o e estilos est√£o adequados  
            - [ ] üîó Links internos funcionam
            - [ ] üì± Layout √© responsivo
            - [ ] üìã √çndice JSON est√° correto
            - [ ] üìÅ Estrutura de pastas est√° organizada

            ---
            **‚ö†Ô∏è Esta PR requer aprova√ß√£o manual do propriet√°rio antes do merge.**
          labels: |
            books-update
            quarto-render
            needs-review
            automated-pr
          assignees: ${{ github.repository_owner }}
          draft: false
          commit-message: |
            üìö Adiciona/Atualiza livros renderizados

            Livros processados:
            $(ls _rendered 2>/dev/null | sed 's/^/- /' || echo "- Nenhum")

            - Renderiza√ß√£o Quarto ‚Üí HTML
            - √çndice JSON gerado automaticamente
            - Estrutura organizada em book/

            Commit fonte: ${{ github.sha }}
            Data: $(date +'%Y-%m-%d %H:%M:%S UTC')

      - name: Adiciona coment√°rio com instru√ß√µes
        if: steps.create-pr.outputs.pull-request-number
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ env.TOKEN }}
          issue-number: ${{ steps.create-pr.outputs.pull-request-number }}
          body: |
            ## ü§ñ Instru√ß√µes Autom√°ticas

            ### üìã Status do Workflow
            ‚úÖ Livros renderizados com sucesso  
            ‚úÖ Pull Request criada  
            ‚è≥ **Aguardando sua aprova√ß√£o**  

            ### üîç Como Revisar

            1. **Verifique os arquivos alterados** na aba "Files changed"
            2. **Teste os livros localmente** se necess√°rio:
               ```bash
               git checkout update-books-$(date +%Y%m%d-%H%M%S)
               # Abra book/*/index.html no navegador
               ```
            3. **Aprove a PR** quando estiver satisfeito

            ### üìÅ Arquivos Importantes
            - `books-index.json` - Metadata dos livros
            - Cada pasta de livro cont√©m o HTML renderizado

            ---
            *Esta PR foi criada automaticamente e **requer sua aprova√ß√£o** para merge.*

      - name: Limpa arquivos tempor√°rios
        run: |
          rm -rf _rendered
          echo "‚úÖ Arquivos tempor√°rios removidos"

#  create-pr:
