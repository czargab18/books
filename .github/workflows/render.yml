name: books_v5

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: ["build/**/*.qmd", "build/**/*.yml", "build/*.bib", ".github/workflows/*books*.yml"]

permissions:
  contents: write
  pull-requests: read
  pages: write
  id-token: write

env:
  url: ${{ vars.URL }}
  USEREMAIL: ${{ secrets.USEREMAIL }}
  USERNAME: ${{ github.repository_owner }}
  TOKEN_REPO_SYNC: ${{ secrets.TOKEN_REPO_SYNC }}

jobs:
  renderizar:
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    steps:
      - run: |
          echo "Renderizando livros Quarto..."

      - name: Checkout do repositório
        uses: actions/checkout@v4

      # Descomente se/quando quiser renderizar os livros
      # - name: Configura Quarto
      #   uses: quarto-dev/quarto-actions/setup@v2

      # - name: Renderiza livros Quarto
      #   run: |
      #     mkdir -p _docs
      #     for folder in $(ls build); do
      #       if [ -d "build/$folder" ]; then
      #         quarto render "build/$folder" --to html --execute --output-dir "_docs/$folder"
      #       fi
      #     done
      #   shell: bash

      # - name: Remove versões antigas dos livros renderizados
      #   run: |
      #     mkdir -p book
      #     for folder in $(ls _docs); do
      #       rm -rf "book/$folder"
      #     done
      #   shell: bash

      # - name: Move novos livros renderizados para book
      #   run: |
      #     for folder in $(ls _docs); do
      #       mv "_docs/$folder" "book/$folder"
      #     done
      #   shell: bash

      # - name: Salva artefato para GitHub Pages
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     name: github-pages
      #     path: "./_docs"

  deploy:
    needs: [renderizar]
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    env:
      USEREMAIL: ${{ secrets.USEREMAIL }}
      USERNAME: ${{ github.repository_owner }}
      TOKEN_REPO_SYNC: ${{ secrets.TOKEN_REPO_SYNC }}
    steps:
      - name: Clonar submódulo wss
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/wss
          token: ${{ secrets.TOKEN_REPO_SYNC }}
          path: "wss"
          ref: "main"

      - name: Adiciona fonts
        run: |
          mkdir -p books/book/wss/
          rsync -av --update wss/fonts.css books/book/wss/
          rsync -av --update wss/fonts books/book/wss/
        shell: bash

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: books/book
          name: github-pages

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: github-pages

  dispatch:
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    steps:
      - name: Atualizar 'submódulo books'
        uses: peter-evans/repository-dispatch@v3
        with:
          repository: ${{ env.USERNAME }}/estatistica
          token: ${{ env.TOKEN }}
          event-type: atualizar-books

      - name: Mensagem sucesso
        run: echo "Disparo realizado com sucesso!"
  
  # referências:
  # - https://medium.com/@0xWerz/how-to-automatically-update-git-submodules-using-github-actions-d71c8126e82e