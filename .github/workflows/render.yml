name: books_v5

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: ["build/**/*.qmd", "build/**/*.yml", "build/*.bib", ".github/workflows/*books*.yml"]

permissions:
  contents: write
  pull-requests: read
  pages: write
  id-token: write

env:
  url: ${{ vars.URL }}
  USEREMAIL: ${{ secrets.USEREMAIL }}
  USERNAME: ${{ github.repository_owner }}
  TOKEN: ${{ secrets.TOKEN_REPO_SYNC }}

jobs:
  renderizar:
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    steps:
      - run: |
          echo "Renderizando livros Quarto..."

      - name: Checkout do repositório
        uses: actions/checkout@v4

      # Descomente se/quando quiser renderizar os livros
      - name: Configura Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Renderiza livros Quarto
        run: |
          mkdir -p _docs
          for folder in $(ls build); do
            if [ -d "build/$folder" ]; then
              quarto render "build/$folder" --to html --execute --output-dir "_docs/$folder"
            fi
          done
        shell: bash

      - name: Remove versões antigas dos livros renderizados
        run: |
          mkdir -p book
          for folder in $(ls _docs); do
            rm -rf "book/$folder"
          done
        shell: bash

      - name: Move novos livros renderizados para book
        run: |
          for folder in $(ls _docs); do
            mv "_docs/$folder" "book/$folder"
          done
        shell: bash

      - name: Exporta livros renderizados
        uses: actions/upload-artifact@v4
        with:
          name: books_renderizados
          path: "./_docs"

  deploy:
    needs: [renderizar]
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    steps:
      - name: Baixa artefato
        uses: actions/download-artifact@v4
        with:
          name: books_detectados
          path: books

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: books

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  estatistica:
    needs: [renderizar]
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    steps:
      - name: Clona o Repositório ESTATISTICA
        uses: actions/checkout@v4
        with:
          ref: book
          path: estatistica
          fetch-depth: 0
          repository: ${{ env.USERNAME }}/estatistica
          token: ${{ secrets.TOKEN }}

      - name: Baixa artefato dos livros renderizados
        uses: actions/download-artifact@v4
        with:
          name: artefatos_books
          path: _books

      - name: Garante que a branch book existe e faz checkout
        working-directory: estatistica
        run: |
          if ! git rev-parse --verify book >/dev/null 2>&1; then
            git checkout --orphan book
            git rm -rf .
            git commit --allow-empty -m "Cria branch book inicial"
            git push origin book
          else
            git checkout book
          fi

      - name: Sincroniza arquivos do artefato com a branch book
        run: |
          rsync -av --update --delete _books/ estatistica/books/

      - name: Configura credenciais do Git
        working-directory: estatistica
        run: |
          git config user.name "${{ env.USERNAME }}"
          git config user.email "${{ env.USEREMAIL }}"
          git remote set-url origin https://x-access-token:${{ env.TOKEN }}@github.com/${{ env.USERNAME }}/estatistica.git

      - name: Faz commit e push dos livros renderizados
        working-directory: estatistica
        run: |
          git add books/
          git commit -m "books: atualiza books a partir do repo:books" || echo "Nada a commitar"
          git push --force origin book

  dispatch:
    needs: [renderizar]
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    steps:
      - name: Atualizar 'submódulo books'
        uses: peter-evans/repository-dispatch@v3
        with:
          repository: ${{ env.USERNAME }}/estatistica
          token: ${{ env.TOKEN }}
          event-type: atualizar-books

      - name: Mensagem sucesso
        run: echo "Disparo realizado com sucesso!"
    # referências:
    # - https://medium.com/@0xWerz/how-to-automatically-update-git-submodules-using-github-actions-d71c8126e82e

  cleanup:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Deleta artefatos
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            github-pages
            books_renderizados

# 